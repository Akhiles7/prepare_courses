---
# tasks file for vagrant_win/
- name: Install vagrant
  block:
    - name: "Create folder for downloads: {{ downloads }}"
      win_file:
        path: "{{ downloads }}"
        state: directory
    - name: Download vagrant distrib 
      win_get_url:
        url: "{{ vagrant.distrib.url }}"
        dest: "{{ downloads }}"
        force: no
      register: downlout 
    - name: Install vagrant
      win_package:
        path: "{{ downlout.dest }}"
        product_id: "{{ vagrant.distrib.product_id }}"
        arguments: "/quiet /norestart"
        state: present
  tags: install

- name: Copy boxes
  block:
    - debug:
        var: item.value['dest']
        verbosity: 1
      with_dict: "{{ boxes }}"
    - name: Create or check destination
      win_file: 
        path: "{{ item.value['dest'] }}"
        state: directory
      with_dict: "{{ boxes }}"
    - name: Copy box
      win_copy:
        src: "{{ item.value['src'] }}/{{ item.value['file'] }}"
        dest: "{{ item.value['dest'] }}\\{{ item.value['box_name'] }}.box"
        force: no
#        force: yes # the file will only be transferred if the content is different than destination.
      with_dict: "{{ boxes }}"
    - name: Check box existance and md5-summ
      win_stat:
        path: "{{ item.value['dest'] }}\\{{ item.value['file'] }}"
        get_md5: true
      with_dict: "{{ boxes }}"
  when: boxes is defined
  tags: copy_boxes


- name: Add boxes
  block:
    - name: Exec vagrant box add
      win_command: "vagrant box add {{ item.value['box_name'] }}  {{ item.value['dest'] }}\\{{ item.value['box_name'] }}.box"
      with_dict: "{{ boxes }}"
      register: boxadd_out
      failed_when:
        - not ("The box you\'re attempting to add already exists" in boxadd_out.stderr)
        - not ("Successfully added box" in boxadd_out.stdout)
    - debug:
        var: boxadd_out
        verbosity: 1
  when: boxes is defined 
  tags: add_boxes

- name: Initialize boxes
  block:
    - name: Exec vagrant init
      win_command: "vagrant init"
      args:
        chdir: "{{ item.value['dest'] }}"
      with_dict: "{{ boxes }}"
  when: boxes is defined
  tags: init_boxes

- name: Configure boxes
  block:
    - debug:
        msg: config
  when: boxes is defined
  tags: config_boxes

- name: Vagrant up boxes
  block:
#    - name: Exec vagrant up
#      win_command: "vagrant up"
#      args:
#        chdir: "{{ item.value['dest'] }}"
#      with_dict: "{{ boxes }}"
    - debug:
        msg: up
  when: boxes is defined
  tags: up
